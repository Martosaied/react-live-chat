{"ast":null,"code":"import React from\"react\";import{createStyles,Paper,Avatar,withStyles,Chip}from\"@material-ui/core\";import ChatInput from\"./ChatInput\";var chatTextStyles=createStyles({root:{margin:'8px',height:'calc(100% - 80px)'},chatInputPaper:{height:'calc(100% - 64px)'},chatInput:{overflowY:'scroll',height:'100%',padding:'16px'},chatRoomMessage:{display:'flex',marginBottom:'8px'},username:{fontSize:'10px',marginBottom:'0px',marginTop:'0px',marginLeft:'5px'},text:{marginLeft:'5px'}});var defaultProps={classes:{},messages:[]};var ChatText=function ChatText(props){var messages=props.messages;//TODO: Delete ! operator when props are done\nvar classes=props.classes;return/*#__PURE__*/React.createElement(\"section\",{className:classes.root},/*#__PURE__*/React.createElement(Paper,{className:classes.chatInputPaper,elevation:4},/*#__PURE__*/React.createElement(\"div\",{className:classes.chatInput},messages.map(function(message){return/*#__PURE__*/React.createElement(React.Fragment,{key:message.id},/*#__PURE__*/React.createElement(\"div\",{className:classes.chatRoomMessage},/*#__PURE__*/React.createElement(Avatar,{alt:message.user.username,src:message.user.avatar}),/*#__PURE__*/React.createElement(\"div\",{className:classes.text},/*#__PURE__*/React.createElement(\"p\",{className:classes.username},/*#__PURE__*/React.createElement(\"strong\",null,message.user.username)),/*#__PURE__*/React.createElement(Chip,{label:message.text}))));}))),/*#__PURE__*/React.createElement(ChatInput,{handleSendButton:props.handleSendButton}));};ChatText.defaultProps=defaultProps;export default withStyles(chatTextStyles)(ChatText);","map":{"version":3,"sources":["/home/martin/chat-app-example/web-client/src/views/chat/components/chat-text/ChatText.tsx"],"names":["React","createStyles","Paper","Avatar","withStyles","Chip","ChatInput","chatTextStyles","root","margin","height","chatInputPaper","chatInput","overflowY","padding","chatRoomMessage","display","marginBottom","username","fontSize","marginTop","marginLeft","text","defaultProps","classes","messages","ChatText","props","map","message","id","user","avatar","handleSendButton"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,CAAuBC,KAAvB,CAA8BC,MAA9B,CAAsCC,UAAtC,CAAkDC,IAAlD,KAA8D,mBAA9D,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,GAAMC,CAAAA,cAAc,CAAGN,YAAY,CAAC,CACnCO,IAAI,CAAE,CACLC,MAAM,CAAE,KADH,CAELC,MAAM,CAAE,mBAFH,CAD6B,CAKnCC,cAAc,CAAE,CACfD,MAAM,CAAE,mBADO,CALmB,CAQnCE,SAAS,CAAE,CACVC,SAAS,CAAE,QADD,CAEVH,MAAM,CAAE,MAFE,CAGVI,OAAO,CAAE,MAHC,CARwB,CAanCC,eAAe,CAAE,CAChBC,OAAO,CAAE,MADO,CAEhBC,YAAY,CAAE,KAFE,CAbkB,CAiBnCC,QAAQ,CAAE,CACHC,QAAQ,CAAE,MADP,CAEHF,YAAY,CAAE,KAFX,CAGHG,SAAS,CAAE,KAHR,CAIHC,UAAU,CAAE,KAJT,CAjByB,CAuBhCC,IAAI,CAAE,CACFD,UAAU,CAAE,KADV,CAvB0B,CAAD,CAAnC,CAkCA,GAAME,CAAAA,YAAoB,CAAG,CACzBC,OAAO,CAAE,EADgB,CAEzBC,QAAQ,CAAE,EAFe,CAA7B,CAMA,GAAMC,CAAAA,QAA0B,CAAG,QAA7BA,CAAAA,QAA6B,CAAAC,KAAK,CAAI,CAE1C,GAAMF,CAAAA,QAAQ,CAAGE,KAAK,CAACF,QAAvB,CAAiC;AACjC,GAAMD,CAAAA,OAAO,CAAGG,KAAK,CAACH,OAAtB,CAEM,mBACL,+BAAS,SAAS,CAAEA,OAAO,CAAChB,IAA5B,eACC,oBAAC,KAAD,EAAO,SAAS,CAAEgB,OAAO,CAACb,cAA1B,CAA0C,SAAS,CAAE,CAArD,eACC,2BAAK,SAAS,CAAEa,OAAO,CAACZ,SAAxB,EACEa,QAAQ,CAACG,GAAT,CAAa,SAACC,OAAD,CAAsB,CACnC,mBACC,oBAAC,KAAD,CAAO,QAAP,EAAgB,GAAG,CAAEA,OAAO,CAACC,EAA7B,eAC4B,2BAAK,SAAS,CAAEN,OAAO,CAACT,eAAxB,eACI,oBAAC,MAAD,EAAQ,GAAG,CAAEc,OAAO,CAACE,IAAR,CAAab,QAA1B,CAAoC,GAAG,CAAEW,OAAO,CAACE,IAAR,CAAaC,MAAtD,EADJ,cAEI,2BAAK,SAAS,CAAER,OAAO,CAACF,IAAxB,eACI,yBAAG,SAAS,CAAEE,OAAO,CAACN,QAAtB,eAAgC,kCAASW,OAAO,CAACE,IAAR,CAAab,QAAtB,CAAhC,CADJ,cAEI,oBAAC,IAAD,EAAM,KAAK,CAAEW,OAAO,CAACP,IAArB,EAFJ,CAFJ,CAD5B,CADD,CAWA,CAZA,CADF,CADD,CADD,cAmBa,oBAAC,SAAD,EAAW,gBAAgB,CAAEK,KAAK,CAACM,gBAAnC,EAnBb,CADK,CAwBP,CA7BD,CA+BAP,QAAQ,CAACH,YAAT,CAAwBA,YAAxB,CAEA,cAAenB,CAAAA,UAAU,CAACG,cAAD,CAAV,CAA2BmB,QAA3B,CAAf","sourcesContent":["import React from \"react\"\nimport { createStyles, Paper, Avatar, withStyles, Chip } from \"@material-ui/core\"\nimport { Message } from 'models/message/model'\nimport ChatInput from \"./ChatInput\"\n\nconst chatTextStyles = createStyles({\n\troot: {\n\t\tmargin: '8px',\n\t\theight: 'calc(100% - 80px)',\n\t},\n\tchatInputPaper: {\n\t\theight: 'calc(100% - 64px)'\n\t},\n\tchatInput: {\n\t\toverflowY: 'scroll',\n\t\theight: '100%',\n\t\tpadding: '16px',\n\t},\n\tchatRoomMessage: {\n\t\tdisplay: 'flex',\n\t\tmarginBottom: '8px'\n\t},\n\tusername: {\n        fontSize: '10px',\n        marginBottom: '0px',\n        marginTop: '0px',\n        marginLeft: '5px',\n    },\n    text: {\n        marginLeft: '5px',\n    }\n})\n\ninterface IProps {\n    classes: any\n    messages?: Message[]\n    handleSendButton?: Function\n}\n\nconst defaultProps: IProps = {\n    classes: {},\n    messages: [],\n    \n}\n\nconst ChatText: React.FC<IProps> = props => {\n\n\t\tconst messages = props.messages! //TODO: Delete ! operator when props are done\n\t\tconst classes = props.classes\n\n        return (\n\t\t\t<section className={classes.root}>\n\t\t\t\t<Paper className={classes.chatInputPaper} elevation={4}>\n\t\t\t\t\t<div className={classes.chatInput}>\n\t\t\t\t\t\t{messages.map((message: Message) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<React.Fragment key={message.id}>\n                                    <div className={classes.chatRoomMessage}>\n                                        <Avatar alt={message.user.username} src={message.user.avatar} />\n                                        <div className={classes.text}>\n                                            <p className={classes.username}><strong>{message.user.username}</strong></p>\n                                            <Chip label={message.text} />\n                                        </div>\n                                    </div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t</div>\n\t\t\t\t</Paper>\n                <ChatInput handleSendButton={props.handleSendButton} />\n\t\t\t</section>\n\t\t)\n\n}\n\nChatText.defaultProps = defaultProps\n\nexport default withStyles(chatTextStyles)(ChatText)\n"]},"metadata":{},"sourceType":"module"}