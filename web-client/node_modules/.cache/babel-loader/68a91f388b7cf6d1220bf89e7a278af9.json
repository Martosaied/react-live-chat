{"ast":null,"code":"var _jsxFileName = \"/home/martin/ChatApp/chat-web-client-react/src/views/chat/components/chat-text/ChatText.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { createStyles, Paper, Avatar, Input, withStyles, Chip } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nconst chatTextStyles = createStyles({\n  root: {\n    margin: '8px',\n    height: 'calc(100% - 80px)'\n  },\n  chatInputPaper: {\n    height: 'calc(100% - 64px)'\n  },\n  chatInput: {\n    overflowY: 'scroll',\n    height: '100%',\n    padding: '16px'\n  },\n  composeInputPaper: {\n    display: 'flex',\n    marginTop: '16px'\n  },\n  composeInput: {\n    padding: '16px'\n  },\n  sendIcon: {\n    color: '#2196f3'\n  },\n  chatRoomMessage: {\n    display: 'flex',\n    marginBottom: '8px'\n  },\n  username: {\n    fontSize: '10px',\n    marginBottom: '0px',\n    marginTop: '0px',\n    marginLeft: '5px'\n  },\n  text: {\n    marginLeft: '5px'\n  }\n});\nconst defaultProps = {\n  classes: {},\n  messages: []\n};\n\nconst ChatText = props => {\n  const messages = props.messages; //TODO: Delete ! operator when props are done\n\n  const classes = props.classes;\n  const [text, setText] = useState('');\n\n  const handleTextChange = event => setText(event.target.value);\n\n  const handleSendButton = () => {\n    setText('');\n    props.handleSendButton(text);\n  };\n\n  const handleUserKeyPress = event => {\n    const {\n      keyCode\n    } = event;\n\n    if (keyCode === 13) {\n      event.preventDefault();\n      handleSendButton();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleUserKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleUserKeyPress);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.chatInputPaper,\n    elevation: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }, messages.map(message => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: message.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chatRoomMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: message.user.username,\n      src: message.user.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 77\n      }\n    }, messsage.user.username)), /*#__PURE__*/React.createElement(Chip, {\n      label: message.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 45\n      }\n    }))));\n  }))), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.composeInputPaper,\n    elevation: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    classes: {\n      root: classes.composeInput\n    },\n    multiline: true,\n    value: text,\n    fullWidth: true,\n    disableUnderline: true,\n    placeholder: 'Send a message!',\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSendButton,\n    endIcon: /*#__PURE__*/React.createElement(SendIcon, {\n      className: classes.searchIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Send\")));\n};\n\nChatText.defaultProps = defaultProps;\nexport default withStyles(chatTextStyles)(ChatText);","map":{"version":3,"sources":["/home/martin/ChatApp/chat-web-client-react/src/views/chat/components/chat-text/ChatText.tsx"],"names":["React","useState","useEffect","createStyles","Paper","Avatar","Input","withStyles","Chip","Button","SendIcon","chatTextStyles","root","margin","height","chatInputPaper","chatInput","overflowY","padding","composeInputPaper","display","marginTop","composeInput","sendIcon","color","chatRoomMessage","marginBottom","username","fontSize","marginLeft","text","defaultProps","classes","messages","ChatText","props","setText","handleTextChange","event","target","value","handleSendButton","handleUserKeyPress","keyCode","preventDefault","window","addEventListener","removeEventListener","map","message","id","user","avatar","messsage","searchIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { createStyles, Paper, Avatar, Divider, Input, withStyles, Chip } from \"@material-ui/core\"\nimport Button from '@material-ui/core/Button'\nimport SendIcon from '@material-ui/icons/Send'\nimport { Message } from 'models/message/model'\n\nconst chatTextStyles = createStyles({\n\troot: {\n\t\tmargin: '8px',\n\t\theight: 'calc(100% - 80px)',\n\t},\n\tchatInputPaper: {\n\t\theight: 'calc(100% - 64px)'\n\t},\n\tchatInput: {\n\t\toverflowY: 'scroll',\n\t\theight: '100%',\n\t\tpadding: '16px',\n\t},\n\tcomposeInputPaper: {\n        display: 'flex',\n        marginTop: '16px',\n\t},\n\tcomposeInput: {\n        padding: '16px',\n\t},\n\tsendIcon: {\n\t\tcolor: '#2196f3'\n\t},\n\tchatRoomMessage: {\n\t\tdisplay: 'flex',\n\t\tmarginBottom: '8px'\n\t},\n\tusername: {\n        fontSize: '10px',\n        marginBottom: '0px',\n        marginTop: '0px',\n        marginLeft: '5px',\n    },\n    text: {\n        marginLeft: '5px',\n    }\n})\n\ninterface IProps {\n    classes: any\n    messages?: Message[]\n    handleSendButton?: Function\n}\n\nconst defaultProps: IProps = {\n    classes: {},\n    messages: [],\n    \n}\n\nconst ChatText: React.FC<IProps> = props => {\n\n\t\tconst messages = props.messages! //TODO: Delete ! operator when props are done\n\t\tconst classes = props.classes\n\n        const [text, setText] = useState('')\n\n        const handleTextChange = (event: any) => setText(event.target.value)\n        const handleSendButton = (): any => {\n            setText('')\n            props.handleSendButton!(text)\n        }\n\n        const handleUserKeyPress = (event: any) => {\n            const { keyCode } = event;\n        \n            if (keyCode === 13) {\n                event.preventDefault();\n                handleSendButton()\n            }\n        };\n\n        useEffect(() => {\n            window.addEventListener('keydown', handleUserKeyPress);\n        \n            return () => {\n              window.removeEventListener('keydown', handleUserKeyPress);\n            };\n        });\n\n        return (\n\t\t\t<section className={classes.root}>\n\t\t\t\t<Paper className={classes.chatInputPaper} elevation={4}>\n\t\t\t\t\t<div className={classes.chatInput}>\n\n\t\t\t\t\t\t{messages.map((message: Message) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<React.Fragment key={message.id}>\n                                    <div className={classes.chatRoomMessage}>\n                                        <Avatar alt={message.user.username} src={message.user.avatar} />\n                                        <div className={classes.text}>\n                                            <p className={classes.username}><strong>{messsage.user.username}</strong></p>\n                                            <Chip label={message.text} />\n                                        </div>\n                                    </div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t</div>\n\t\t\t\t</Paper>\n\t\t\t\t<Paper className={classes.composeInputPaper} elevation={4}>\n                    <Input \n                        classes={{ root: classes.composeInput }} multiline={true} value={text} \n                        fullWidth={true} disableUnderline={true} placeholder={'Send a message!'} \n                        onChange={handleTextChange}    \n                    />\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        onClick={handleSendButton}\n                        endIcon={<SendIcon className={classes.searchIcon} />}\n                    >\n                        Send\n                    </Button>\n\t\t\t\t</Paper>\n\t\t\t</section>\n\t\t)\n\n}\n\nChatText.defaultProps = defaultProps\n\nexport default withStyles(chatTextStyles)(ChatText)\n"]},"metadata":{},"sourceType":"module"}