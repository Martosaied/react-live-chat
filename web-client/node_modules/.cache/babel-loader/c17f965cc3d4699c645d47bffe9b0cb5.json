{"ast":null,"code":"var _jsxFileName = \"/home/martin/chat-app-example/web-client/src/views/chat/Chat.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport useSocket from 'hooks/useSocket';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport PeopleList from './components/people-list/PeopleList';\nimport ChatToolbar from './components/chat-toolbar/ChatToolbar';\nimport ChatText from './components/chat-text/ChatText';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport LoginForm from './components/login-form/LoginForm';\nconst styles = createStyles({\n  root: {\n    margin: '16px',\n    height: 'calc(100vh - 32px)'\n  },\n  paper: {\n    height: '100%'\n  },\n  gridContainer: {\n    height: 'inherit'\n  },\n  gridItem: {\n    height: '100%'\n  },\n  '@global': {\n    'body': {\n      fontFamily: '\"Roboto\"'\n    }\n  }\n});\n\nconst ChatRoom = props => {\n  const PORT = process.env.PORT || 3000;\n  const socket = useSocket(`http://127.0.0.1:${PORT}`);\n  const {\n    classes\n  } = props;\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const handleUpdateUsers = users => {\n      setUsers([...users]);\n    };\n\n    if (socket) {\n      socket.on('UPDATE_USERS', handleUpdateUsers);\n    }\n  }, [socket, users]);\n  useEffect(() => {\n    const handleUpdateMessages = message => {\n      setMessages(messages => [...messages, message]);\n    };\n\n    if (socket) {\n      socket.on('UPDATE_MESSAGES', handleUpdateMessages);\n    }\n  }, [socket]);\n\n  const addMessage = text => {\n    socket.emit('ADD_MESSAGE', text);\n  };\n\n  const addUser = username => {\n    socket.emit('ADD_USER', username);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(LoginForm, {\n    onSubmit: addUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(PeopleList, {\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 10,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChatToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(ChatText, {\n    messages: messages,\n    handleSendButton: addMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }\n  })))));\n};\n\nexport default withStyles(styles)(ChatRoom);","map":{"version":3,"sources":["/home/martin/chat-app-example/web-client/src/views/chat/Chat.tsx"],"names":["React","useState","useEffect","useSocket","Paper","Grid","PeopleList","ChatToolbar","ChatText","withStyles","createStyles","Hidden","LoginForm","styles","root","margin","height","paper","gridContainer","gridItem","fontFamily","ChatRoom","props","PORT","process","env","socket","classes","messages","setMessages","users","setUsers","handleUpdateUsers","on","handleUpdateMessages","message","addMessage","text","emit","addUser","username"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport useSocket from 'hooks/useSocket'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport PeopleList from './components/people-list/PeopleList'\nimport ChatToolbar from './components/chat-toolbar/ChatToolbar'\nimport ChatText from './components/chat-text/ChatText'\nimport { withStyles, createStyles } from '@material-ui/core/styles'\nimport Hidden from '@material-ui/core/Hidden'\nimport LoginForm from './components/login-form/LoginForm'\n\nconst styles = createStyles({\n\troot: {\n\t\tmargin: '16px',\n\t\theight: 'calc(100vh - 32px)'\n\t},\n\tpaper: {\n\t\theight: '100%'\n\t},\n\tgridContainer: {\n\t\theight: 'inherit'\n\t},\n\tgridItem: {\n\t\theight: '100%'\n\t},\n\t'@global': {\n\t\t'body': {\n\t\t\tfontFamily: '\"Roboto\"'\n\t\t}\n\t}\n})\n\ninterface IProps {\n    classes: {\n        root: string\n        paper: string\n        gridContainer: string\n        gridItem: string\n        '@global': string\n    }\n    addMessage?: Function\n}\n\nconst ChatRoom: React.FC<IProps> = props => {\n        const PORT = process.env.PORT || 3000;\n        const socket: any = useSocket(`http://127.0.0.1:${PORT}`)\n\n        const { classes } = props\n        \n        const [messages, setMessages] = useState<Array<any>>([]);\n        const [users, setUsers] = useState<Array<any>>([]);\n\n        useEffect(() => {\n            const handleUpdateUsers = (users: any) => {\n                setUsers([...users])\n            }\n\n            if (socket) {\n                socket.on('UPDATE_USERS', handleUpdateUsers)\n            }\n        }, [socket, users])\n\n        useEffect(() => {\n            const handleUpdateMessages = (message: any) => {\n                setMessages(messages => [...messages, message])\n            }\n\n            if (socket) {\n                socket.on('UPDATE_MESSAGES', handleUpdateMessages)\n            }\n        }, [socket])\n\n        const addMessage = (text: string) => {\n            socket.emit('ADD_MESSAGE', text)\n        }\n\n        const addUser = (username: string) => {\n            socket.emit('ADD_USER', username)\n        }\n    \n\t\treturn (\n\t\t\t<div className={classes.root}>\n                <LoginForm onSubmit={addUser} />\n\t\t\t    <Paper className={classes.paper} elevation={2}>\n\t\t\t\t\t<Grid container spacing={0} className={classes.gridContainer}>\n\t\t\t\t\t\t<Hidden mdDown>\n\t\t\t\t\t\t\t<Grid item md={2} className={classes.gridItem}>\n\t\t\t\t\t\t\t\t<PeopleList users={users} />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Hidden>\n\t\t\t\t\t\t<Grid item xs={12} md={10} className={classes.gridItem}>\n\t\t\t\t\t\t\t<ChatToolbar />\n\t\t\t\t\t\t\t<ChatText messages={messages} handleSendButton={addMessage} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t)\n}\n\nexport default withStyles(styles)(ChatRoom)\n"]},"metadata":{},"sourceType":"module"}