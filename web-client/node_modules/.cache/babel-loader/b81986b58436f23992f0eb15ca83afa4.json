{"ast":null,"code":"import _slicedToArray from\"/home/martin/chat-app-example/web-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{createStyles,Paper,Input,withStyles}from\"@material-ui/core\";import Button from'@material-ui/core/Button';import SendIcon from'@material-ui/icons/Send';var chatInputStyles=createStyles({composeInputPaper:{display:'flex',marginTop:'16px'},composeInput:{padding:'16px'},sendIcon:{color:'#2196f3'}});var defaultProps={classes:{}};var ChatInput=function ChatInput(props){var classes=props.classes;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var handleTextChange=function handleTextChange(event){return setText(event.target.value);};var handleSendButton=function handleSendButton(){setText('');props.handleSendButton(text);};var handleUserKeyPress=function handleUserKeyPress(event){var keyCode=event.keyCode;if(keyCode===13){event.preventDefault();handleSendButton();}};useEffect(function(){window.addEventListener('keydown',handleUserKeyPress);return function(){window.removeEventListener('keydown',handleUserKeyPress);};});return/*#__PURE__*/React.createElement(Paper,{className:classes.composeInputPaper,elevation:4},/*#__PURE__*/React.createElement(Input,{classes:{root:classes.composeInput},multiline:true,value:text,fullWidth:true,disableUnderline:true,placeholder:'Send a message!',onChange:handleTextChange}),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:handleSendButton,endIcon:/*#__PURE__*/React.createElement(SendIcon,{className:classes.searchIcon})},\"Send\"));};ChatInput.defaultProps=defaultProps;export default withStyles(chatInputStyles)(ChatInput);","map":{"version":3,"sources":["/home/martin/chat-app-example/web-client/src/views/chat/components/chat-text/ChatInput.tsx"],"names":["React","useState","useEffect","createStyles","Paper","Input","withStyles","Button","SendIcon","chatInputStyles","composeInputPaper","display","marginTop","composeInput","padding","sendIcon","color","defaultProps","classes","ChatInput","props","text","setText","handleTextChange","event","target","value","handleSendButton","handleUserKeyPress","keyCode","preventDefault","window","addEventListener","removeEventListener","root","searchIcon"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,YAAT,CAAuBC,KAAvB,CAA8BC,KAA9B,CAAqCC,UAArC,KAAuD,mBAAvD,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CAEA,GAAMC,CAAAA,eAAe,CAAGN,YAAY,CAAC,CACpCO,iBAAiB,CAAE,CACZC,OAAO,CAAE,MADG,CAEZC,SAAS,CAAE,MAFC,CADiB,CAKpCC,YAAY,CAAE,CACPC,OAAO,CAAE,MADF,CALsB,CAQpCC,QAAQ,CAAE,CACTC,KAAK,CAAE,SADE,CAR0B,CAAD,CAApC,CAkBA,GAAMC,CAAAA,YAAoB,CAAG,CACzBC,OAAO,CAAE,EADgB,CAA7B,CAIA,GAAMC,CAAAA,SAA2B,CAAG,QAA9BA,CAAAA,SAA8B,CAAAC,KAAK,CAAI,CAE3C,GAAMF,CAAAA,OAAO,CAAGE,KAAK,CAACF,OAAtB,CAF2C,cAIbjB,QAAQ,CAAC,EAAD,CAJK,wCAI9BoB,IAJ8B,eAIxBC,OAJwB,eAMrC,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,QAAgBF,CAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAvB,EAAzB,CACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAW,CAChCL,OAAO,CAAC,EAAD,CAAP,CACAF,KAAK,CAACO,gBAAN,CAAwBN,IAAxB,EACH,CAHD,CAKA,GAAMO,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACJ,KAAD,CAAgB,IAC/BK,CAAAA,OAD+B,CACnBL,KADmB,CAC/BK,OAD+B,CAGvC,GAAIA,OAAO,GAAK,EAAhB,CAAoB,CAChBL,KAAK,CAACM,cAAN,GACAH,gBAAgB,GACnB,CACJ,CAPD,CASAzB,SAAS,CAAC,UAAM,CACZ6B,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmCJ,kBAAnC,EAEA,MAAO,WAAM,CACXG,MAAM,CAACE,mBAAP,CAA2B,SAA3B,CAAsCL,kBAAtC,EACD,CAFD,CAGH,CANQ,CAAT,CAQA,mBACL,oBAAC,KAAD,EAAO,SAAS,CAAEV,OAAO,CAACR,iBAA1B,CAA6C,SAAS,CAAE,CAAxD,eACa,oBAAC,KAAD,EACI,OAAO,CAAE,CAAEwB,IAAI,CAAEhB,OAAO,CAACL,YAAhB,CADb,CAC6C,SAAS,CAAE,IADxD,CAC8D,KAAK,CAAEQ,IADrE,CAEI,SAAS,CAAE,IAFf,CAEqB,gBAAgB,CAAE,IAFvC,CAE6C,WAAW,CAAE,iBAF1D,CAGI,QAAQ,CAAEE,gBAHd,EADb,cAMa,oBAAC,MAAD,EACI,OAAO,CAAC,WADZ,CAEI,KAAK,CAAC,SAFV,CAGI,OAAO,CAAEI,gBAHb,CAII,OAAO,cAAE,oBAAC,QAAD,EAAU,SAAS,CAAET,OAAO,CAACiB,UAA7B,EAJb,SANb,CADK,CAkBP,CA/CD,CAiDAhB,SAAS,CAACF,YAAV,CAAyBA,YAAzB,CAEA,cAAeX,CAAAA,UAAU,CAACG,eAAD,CAAV,CAA4BU,SAA5B,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { createStyles, Paper, Input, withStyles } from \"@material-ui/core\"\nimport Button from '@material-ui/core/Button'\nimport SendIcon from '@material-ui/icons/Send'\n\nconst chatInputStyles = createStyles({\n\tcomposeInputPaper: {\n        display: 'flex',\n        marginTop: '16px',\n\t},\n\tcomposeInput: {\n        padding: '16px',\n\t},\n\tsendIcon: {\n\t\tcolor: '#2196f3'\n\t},\n})\n\ninterface IProps {\n    classes: any\n    handleSendButton?: Function\n}\n\nconst defaultProps: IProps = {\n    classes: {},    \n}\n\nconst ChatInput: React.FC<IProps> = props => {\n\n\t\tconst classes = props.classes\n\n        const [text, setText] = useState('')\n\n        const handleTextChange = (event: any) => setText(event.target.value)\n        const handleSendButton = (): any => {\n            setText('')\n            props.handleSendButton!(text)\n        }\n\n        const handleUserKeyPress = (event: any) => {\n            const { keyCode } = event;\n        \n            if (keyCode === 13) {\n                event.preventDefault();\n                handleSendButton()\n            }\n        };\n\n        useEffect(() => {\n            window.addEventListener('keydown', handleUserKeyPress);\n        \n            return () => {\n              window.removeEventListener('keydown', handleUserKeyPress);\n            };\n        });\n\n        return (\n\t\t\t<Paper className={classes.composeInputPaper} elevation={4}>\n                <Input \n                    classes={{ root: classes.composeInput }} multiline={true} value={text} \n                    fullWidth={true} disableUnderline={true} placeholder={'Send a message!'} \n                    onChange={handleTextChange}    \n                />\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleSendButton}\n                    endIcon={<SendIcon className={classes.searchIcon} />}\n                >\n                    Send\n                </Button>\n\t\t\t</Paper>\n\t\t)\n\n}\n\nChatInput.defaultProps = defaultProps\n\nexport default withStyles(chatInputStyles)(ChatInput)\n"]},"metadata":{},"sourceType":"module"}