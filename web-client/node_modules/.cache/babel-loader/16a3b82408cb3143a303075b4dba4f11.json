{"ast":null,"code":"var _jsxFileName = \"/home/martin/ChatApp/chat-web-client-react/src/views/chat/components/login-form/LoginForm.tsx\";\nimport React, { useState } from 'react';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport { FormControl, FormHelperText, InputLabel, Input } from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nconst styles = createStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nconst LoginForm = props => {\n  const {\n    classes\n  } = props;\n  const [shouldDialogOpen, setShouldDialogOpen] = useState(true);\n\n  const onClose = () => {\n    setShouldDialogOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: onClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: shouldDialogOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"We'll never share your email.\")));\n};\n\nexport default withStyles(styles)(LoginForm);","map":{"version":3,"sources":["/home/martin/ChatApp/chat-web-client-react/src/views/chat/components/login-form/LoginForm.tsx"],"names":["React","useState","createStyles","withStyles","Dialog","FormControl","FormHelperText","InputLabel","Input","blue","styles","avatar","backgroundColor","color","LoginForm","props","classes","shouldDialogOpen","setShouldDialogOpen","onClose"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,0BAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,UAAtC,EAAkDC,KAAlD,QAA+D,mBAA/D;AACA,SAASC,IAAT,QAAqB,0BAArB;AAEA,MAAMC,MAAM,GAAGR,YAAY,CAAC;AAC1BS,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAEH,IAAI,CAAC,GAAD,CADf;AAENI,IAAAA,KAAK,EAAEJ,IAAI,CAAC,GAAD;AAFL;AADkB,CAAD,CAA3B;;AAcA,MAAMK,SAA2B,GAAGC,KAAK,IAAI;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAM,CAACE,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,CAAC,IAAD,CAAxD;;AAEA,QAAMkB,OAAO,GAAG,MAAM;AAClBD,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,GAFD;;AAIA,sBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,OAAjB;AAA0B,uBAAgB,qBAA1C;AAAgE,IAAA,IAAI,EAAEF,gBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,wBAAiB,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHJ,CADJ,CADJ;AASH,CAlBD;;AAoBA,eAAed,UAAU,CAACO,MAAD,CAAV,CAAmBI,SAAnB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport { FormControl, FormHelperText, InputLabel, Input } from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\n\nconst styles = createStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nexport interface IProps {\n    classes: any,\n    open: boolean;\n    selectedValue: string;\n    onClose: (value: string) => void;\n}\n\nconst LoginForm: React.FC<IProps> = props => {\n    const { classes } = props;\n\n    const [shouldDialogOpen, setShouldDialogOpen] = useState(true);\n\n    const onClose = () => {\n        setShouldDialogOpen(false);\n    }\n\n    return (\n        <Dialog onClose={onClose} aria-labelledby=\"simple-dialog-title\" open={shouldDialogOpen}>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n                <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n                <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n            </FormControl>\n        </Dialog>\n    );\n}\n\nexport default withStyles(styles)(LoginForm)\n"]},"metadata":{},"sourceType":"module"}