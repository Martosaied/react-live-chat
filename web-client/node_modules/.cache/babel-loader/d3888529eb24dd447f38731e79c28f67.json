{"ast":null,"code":"var _jsxFileName = \"/home/martin/ChatApp/chat-web-client-react/src/views/chat/components/chat-text/ChatText.tsx\";\nimport React from \"react\";\nimport { createStyles, Paper, Avatar, withStyles, Chip } from \"@material-ui/core\";\nimport ChatInput from \"./ChatInput\";\nconst chatTextStyles = createStyles({\n  root: {\n    margin: '8px',\n    height: 'calc(100% - 80px)'\n  },\n  chatInputPaper: {\n    height: 'calc(100% - 64px)'\n  },\n  chatInput: {\n    overflowY: 'scroll',\n    height: '100%',\n    padding: '16px'\n  },\n  composeInputPaper: {\n    display: 'flex',\n    marginTop: '16px'\n  },\n  composeInput: {\n    padding: '16px'\n  },\n  sendIcon: {\n    color: '#2196f3'\n  },\n  chatRoomMessage: {\n    display: 'flex',\n    marginBottom: '8px'\n  },\n  username: {\n    fontSize: '10px',\n    marginBottom: '0px',\n    marginTop: '0px',\n    marginLeft: '5px'\n  },\n  text: {\n    marginLeft: '5px'\n  }\n});\nconst defaultProps = {\n  classes: {},\n  messages: []\n};\n\nconst ChatText = props => {\n  const messages = props.messages; //TODO: Delete ! operator when props are done\n\n  const classes = props.classes;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.chatInputPaper,\n    elevation: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, messages.map(message => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: message.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chatRoomMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: message.user.username,\n      src: message.user.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 77\n      }\n    }, message.user.username)), /*#__PURE__*/React.createElement(Chip, {\n      label: message.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }\n    }))));\n  }))), /*#__PURE__*/React.createElement(ChatInput, {\n    handleSendButton: props.handleSendButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }));\n};\n\nChatText.defaultProps = defaultProps;\nexport default withStyles(chatTextStyles)(ChatText);","map":{"version":3,"sources":["/home/martin/ChatApp/chat-web-client-react/src/views/chat/components/chat-text/ChatText.tsx"],"names":["React","createStyles","Paper","Avatar","withStyles","Chip","ChatInput","chatTextStyles","root","margin","height","chatInputPaper","chatInput","overflowY","padding","composeInputPaper","display","marginTop","composeInput","sendIcon","color","chatRoomMessage","marginBottom","username","fontSize","marginLeft","text","defaultProps","classes","messages","ChatText","props","map","message","id","user","avatar","handleSendButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,UAAtC,EAAkDC,IAAlD,QAA8D,mBAA9D;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,cAAc,GAAGN,YAAY,CAAC;AACnCO,EAAAA,IAAI,EAAE;AACLC,IAAAA,MAAM,EAAE,KADH;AAELC,IAAAA,MAAM,EAAE;AAFH,GAD6B;AAKnCC,EAAAA,cAAc,EAAE;AACfD,IAAAA,MAAM,EAAE;AADO,GALmB;AAQnCE,EAAAA,SAAS,EAAE;AACVC,IAAAA,SAAS,EAAE,QADD;AAEVH,IAAAA,MAAM,EAAE,MAFE;AAGVI,IAAAA,OAAO,EAAE;AAHC,GARwB;AAanCC,EAAAA,iBAAiB,EAAE;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAbgB;AAiBnCC,EAAAA,YAAY,EAAE;AACPJ,IAAAA,OAAO,EAAE;AADF,GAjBqB;AAoBnCK,EAAAA,QAAQ,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE,GApByB;AAuBnCC,EAAAA,eAAe,EAAE;AAChBL,IAAAA,OAAO,EAAE,MADO;AAEhBM,IAAAA,YAAY,EAAE;AAFE,GAvBkB;AA2BnCC,EAAAA,QAAQ,EAAE;AACHC,IAAAA,QAAQ,EAAE,MADP;AAEHF,IAAAA,YAAY,EAAE,KAFX;AAGHL,IAAAA,SAAS,EAAE,KAHR;AAIHQ,IAAAA,UAAU,EAAE;AAJT,GA3ByB;AAiChCC,EAAAA,IAAI,EAAE;AACFD,IAAAA,UAAU,EAAE;AADV;AAjC0B,CAAD,CAAnC;AA4CA,MAAME,YAAoB,GAAG;AACzBC,EAAAA,OAAO,EAAE,EADgB;AAEzBC,EAAAA,QAAQ,EAAE;AAFe,CAA7B;;AAMA,MAAMC,QAA0B,GAAGC,KAAK,IAAI;AAE1C,QAAMF,QAAQ,GAAGE,KAAK,CAACF,QAAvB,CAF0C,CAET;;AACjC,QAAMD,OAAO,GAAGG,KAAK,CAACH,OAAtB;AAEM,sBACL;AAAS,IAAA,SAAS,EAAEA,OAAO,CAACpB,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEoB,OAAO,CAACjB,cAA1B;AAA0C,IAAA,SAAS,EAAE,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAEiB,OAAO,CAAChB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEiB,QAAQ,CAACG,GAAT,CAAcC,OAAD,IAAsB;AACnC,wBACC,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,OAAO,CAACC,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAC4B;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACP,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEY,OAAO,CAACE,IAAR,CAAaZ,QAA1B;AAAoC,MAAA,GAAG,EAAEU,OAAO,CAACE,IAAR,CAAaC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAER,OAAO,CAACF,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAEE,OAAO,CAACL,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASU,OAAO,CAACE,IAAR,CAAaZ,QAAtB,CAAhC,CADJ,eAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEU,OAAO,CAACP,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,CAD5B,CADD;AAWA,GAZA,CAFF,CADD,CADD,eAoBa,oBAAC,SAAD;AAAW,IAAA,gBAAgB,EAAEK,KAAK,CAACM,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBb,CADK;AAyBP,CA9BD;;AAgCAP,QAAQ,CAACH,YAAT,GAAwBA,YAAxB;AAEA,eAAevB,UAAU,CAACG,cAAD,CAAV,CAA2BuB,QAA3B,CAAf","sourcesContent":["import React from \"react\"\nimport { createStyles, Paper, Avatar, withStyles, Chip } from \"@material-ui/core\"\nimport { Message } from 'models/message/model'\nimport ChatInput from \"./ChatInput\"\n\nconst chatTextStyles = createStyles({\n\troot: {\n\t\tmargin: '8px',\n\t\theight: 'calc(100% - 80px)',\n\t},\n\tchatInputPaper: {\n\t\theight: 'calc(100% - 64px)'\n\t},\n\tchatInput: {\n\t\toverflowY: 'scroll',\n\t\theight: '100%',\n\t\tpadding: '16px',\n\t},\n\tcomposeInputPaper: {\n        display: 'flex',\n        marginTop: '16px',\n\t},\n\tcomposeInput: {\n        padding: '16px',\n\t},\n\tsendIcon: {\n\t\tcolor: '#2196f3'\n\t},\n\tchatRoomMessage: {\n\t\tdisplay: 'flex',\n\t\tmarginBottom: '8px'\n\t},\n\tusername: {\n        fontSize: '10px',\n        marginBottom: '0px',\n        marginTop: '0px',\n        marginLeft: '5px',\n    },\n    text: {\n        marginLeft: '5px',\n    }\n})\n\ninterface IProps {\n    classes: any\n    messages?: Message[]\n    handleSendButton?: Function\n}\n\nconst defaultProps: IProps = {\n    classes: {},\n    messages: [],\n    \n}\n\nconst ChatText: React.FC<IProps> = props => {\n\n\t\tconst messages = props.messages! //TODO: Delete ! operator when props are done\n\t\tconst classes = props.classes\n\n        return (\n\t\t\t<section className={classes.root}>\n\t\t\t\t<Paper className={classes.chatInputPaper} elevation={4}>\n\t\t\t\t\t<div className={classes.chatInput}>\n\n\t\t\t\t\t\t{messages.map((message: Message) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<React.Fragment key={message.id}>\n                                    <div className={classes.chatRoomMessage}>\n                                        <Avatar alt={message.user.username} src={message.user.avatar} />\n                                        <div className={classes.text}>\n                                            <p className={classes.username}><strong>{message.user.username}</strong></p>\n                                            <Chip label={message.text} />\n                                        </div>\n                                    </div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t</div>\n\t\t\t\t</Paper>\n                <ChatInput handleSendButton={props.handleSendButton} />\n\t\t\t</section>\n\t\t)\n\n}\n\nChatText.defaultProps = defaultProps\n\nexport default withStyles(chatTextStyles)(ChatText)\n"]},"metadata":{},"sourceType":"module"}